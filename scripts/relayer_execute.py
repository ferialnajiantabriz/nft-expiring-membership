
import json
from web3 import Web3
from eth_account import Account

# ------------------- RELAYER SETUP -------------------
# This private key must have some Sepolia ETH to pay gas
relayer_private_key = "ad8022ffb47857ff37f093002448f41323f21ec252467d3a8c63c7efc72f927a"
relayer = Account.from_key(relayer_private_key)
print(f"Relayer address: {relayer.address}")

# Connect to Sepolia (Infura) - insert your real key
INFURA_PROJECT_ID = "0dd19889e5b44ef28f8f1c0804a2a784"
w3 = Web3(Web3.HTTPProvider(f"https://sepolia.infura.io/v3/{INFURA_PROJECT_ID}"))

# ------------------- LOAD FORWARDER ABI -------------------
with open("build/contracts/MinimalForwarder.json") as f:
    forwarder_abi = json.load(f)["abi"]

# Deployed MinimalForwarder address
forwarder_address = "0x497b11C99CB77920EFC63e4a5D7396B3709BcDB3"
forwarder = w3.eth.contract(address=forwarder_address, abi=forwarder_abi)

# ------------------- LOAD SIGNED PAYLOAD -------------------
# This file is generated by gasless_renew.py
with open("signed_request.json") as f:
    payload = json.load(f)

req = payload["request"]
signature = payload["signature"]

# Convert numeric fields
req_value = int(req["value"])    # 0.01 ETH in wei
req_gas = int(req["gas"])        # e.g. 100000
req_nonce = int(req["nonce"])    # e.g. 0

# Convert data from "0x..." to bytes
req_data_bytes = bytes.fromhex(req["data"][2:])

# Build the function call
transaction = forwarder.functions.execute(
    (
        req["from"],
        req["to"],
        req_value,
        req_gas,
        req_nonce,
        req_data_bytes
    ),
    signature
)

gas_buffer = 20000  # Extra gas buffer
nonce_relayer = w3.eth.get_transaction_count(relayer.address)

# If you want to forward 0.01 ETH to NFTMembership, you must pass "value": req_value here
tx = transaction.build_transaction({
    "from": relayer.address,
    "nonce": nonce_relayer,
    "gas": req_gas + gas_buffer,
    "gasPrice": w3.to_wei("5", "gwei"),   # Replaced toWei with to_wei
    "value": req_value
})

# Sign & send
signed_tx = w3.eth.account.sign_transaction(tx, private_key=relayer_private_key)
tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

status_str = "SUCCESS" if receipt.status == 1 else "FAILED"
print(f"\nRelayer TX: {tx_hash.hex()}")
print(f"Status: {status_str}")
print(f"View on Etherscan: https://sepolia.etherscan.io/tx/{tx_hash.hex()}")
